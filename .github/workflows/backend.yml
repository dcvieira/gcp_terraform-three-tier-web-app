# Nome do Workflow
name: Backend Pipeline

# Evento que irá acionar a pipeline
# on:
#   push:
#     branches:
#       - main

jobs:
  Build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.33
        env:
          MYSQL_ROOT_PASSWORD: spotmusic!pass
          MYSQL_USER: spotmusic
          MYSQL_PASSWORD: spotmusic!pass
          MYSQL_DATABASE: playlist
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Download do Repositório
        uses: actions/checkout@v3 # https://github.com/actions/checkout
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4 # https://github.com/actions/setup-python
        with:
          python-version: "3.10"

      - name: Install Requirements
        run: pip install -r requirements.txt

      - name: Run Migrations
        run: mysql -u spotmusic -pspotmusic!pass -h 127.0.0.1 playlist < migrations/Playlist.sql

      - name: Unit Test
        env:
          CLOUD_SQL_USERNAME: spotmusic
          CLOUD_SQL_PASSWORD: spotmusic!pass
          CLOUD_SQL_DATABASE_NAME: playlist
        run: |
          coverage run --source=app -m pytest test.py
          coverage report -m
          coverage xml -i

      # - name: SonarCloud Scan
      #   uses: sonarsource/sonarcloud-github-action@master #https://github.com/marketplace/actions/sonarcloud-scan
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Docker Login
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin '${{ vars.GOOGLE_ARTIFACT }}'

      - name: Build & Push Image
        run: |
          docker build -t ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest .
          docker push ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest

  # Deploy-Homolog:
  #   needs: Build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v3 # https://github.com/actions/checkout

  #     - name: Auth GCP
  #       uses: "google-github-actions/auth@v1" # https://github.com/google-github-actions/auth
  #       with:
  #         credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

  #     - name: Cloud Run Deploy - Homolog
  #       id: homolog-deploy
  #       uses: "google-github-actions/deploy-cloudrun@v1" # https://github.com/marketplace/actions/deploy-to-cloud-run
  #       with:
  #         service: ${{ vars.GOOGLE_MYAPP }}-homolog
  #         image: ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest
  #         flags: "--allow-unauthenticated --add-cloudsql-instances=${{ vars.GOOGLE_CLOUDSQL_CONNECTION }}"
  #         env_vars: |
  #           CLOUD_SQL_USERNAME=spotmusic
  #           CLOUD_SQL_DATABASE_NAME=spotmusic-staging
  #           CLOUD_SQL_PASSWORD=k9qtZqTwjzmdnPqW
  #           CLOUD_SQL_CONNECTION_NAME=${{ vars.GOOGLE_CLOUDSQL_CONNECTION }}

  #     - name: Test Homolog
  #       run: 'curl --fail "${{ steps.homolog-deploy.outputs.url }}/health"'

  # Deploy-Production:
  #   needs: Deploy-Homolog
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v3 # https://github.com/actions/checkout

  #     - name: Auth GCP
  #       uses: "google-github-actions/auth@v1" # https://github.com/google-github-actions/auth
  #       with:
  #         credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

  #     - name: Cloud Run Deploy - Production
  #       id: prod-deploy
  #       uses: "google-github-actions/deploy-cloudrun@v1" # https://github.com/marketplace/actions/deploy-to-cloud-run
  #       with:
  #         service: ${{ vars.GOOGLE_MYAPP }}-prod
  #         image: ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest
  #         flags: "--allow-unauthenticated --add-cloudsql-instances=${{ vars.GOOGLE_CLOUDSQL_CONNECTION }}"
  #         env_vars: |
  #           CLOUD_SQL_USERNAME=spotmusic
  #           CLOUD_SQL_DATABASE_NAME=spotmusic-production
  #           CLOUD_SQL_PASSWORD=k9qtZqTwjzmdnPqW
  #           CLOUD_SQL_CONNECTION_NAME=${{ vars.GOOGLE_CLOUDSQL_CONNECTION }}

  #     - name: Test Prod
  #       run: 'curl --fail "${{ steps.prod-deploy.outputs.url }}/health"'
